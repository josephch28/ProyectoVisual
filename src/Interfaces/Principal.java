/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import java.sql.*;
import javax.swing.JMenuItem;
import java.awt.Component;
import Interfaces.ReporteBarras;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author josep
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    private String rol;

    public Principal(String rol) {
        this.rol = rol;
        initComponents();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        aplicarPermisosRol();
        jmniReporteBarras = new javax.swing.JMenuItem("Gráfico de barras de comparraciones de curso");
        jmniReporteBarras.addActionListener(evt -> abrirReporteBarras());
        jmnuReportes.add(jmniReporteBarras);
        jmniBarrasGeneroPorCurso = new javax.swing.JMenuItem("Gráfico de Barras del Género por Curso");
        jmniBarrasGeneroPorCurso.addActionListener(evt -> abrirBarrasGeneroPorCurso());
        jmnuReportes.add(jmniBarrasGeneroPorCurso);

    }

    public void aplicarPermisosRol() {
        if ("secretaria".equalsIgnoreCase(this.rol)) {
            jmnuVentanas.setEnabled(false);
            jmnuUsuarios.setEnabled(false);
        }
    }

    public Principal() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jdskPrincipal = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmnuVentanas = new javax.swing.JMenu();
        jmntEstudiantes = new javax.swing.JMenuItem();
        jmntMatriculas = new javax.swing.JMenuItem();
        jmntCursos = new javax.swing.JMenuItem();
        jmnuReportes = new javax.swing.JMenu();
        jmniReporteEstudiantes = new javax.swing.JMenuItem();
        jmniEstudiantexCedula = new javax.swing.JMenuItem();
        jmnuUsuarios = new javax.swing.JMenu();
        jmniAgregarUsuario = new javax.swing.JMenuItem();
        jmnuSalir = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jdskPrincipalLayout = new javax.swing.GroupLayout(jdskPrincipal);
        jdskPrincipal.setLayout(jdskPrincipalLayout);
        jdskPrincipalLayout.setHorizontalGroup(
            jdskPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jdskPrincipalLayout.setVerticalGroup(
            jdskPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 277, Short.MAX_VALUE)
        );

        jmnuVentanas.setText("Ventanas");

        jmntEstudiantes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmntEstudiantes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/graduado.png"))); // NOI18N
        jmntEstudiantes.setText("Estudiantes");
        jmntEstudiantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmntEstudiantesActionPerformed(evt);
            }
        });
        jmnuVentanas.add(jmntEstudiantes);

        jmntMatriculas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jmntMatriculas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/matricula.png"))); // NOI18N
        jmntMatriculas.setText("Matriculas");
        jmntMatriculas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmntMatriculasActionPerformed(evt);
            }
        });
        jmnuVentanas.add(jmntMatriculas);

        jmntCursos.setText("Cursos");
        jmntCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmntCursosActionPerformed(evt);
            }
        });
        jmnuVentanas.add(jmntCursos);

        jMenuBar1.add(jmnuVentanas);

        jmnuReportes.setText("Reportes");

        jmniReporteEstudiantes.setText("Reporte Estudiantes");
        jmniReporteEstudiantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmniReporteEstudiantesActionPerformed(evt);
            }
        });
        jmnuReportes.add(jmniReporteEstudiantes);

        jmniEstudiantexCedula.setText("Estudiante por Cedula");
        jmniEstudiantexCedula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmniEstudiantexCedulaActionPerformed(evt);
            }
        });
        jmnuReportes.add(jmniEstudiantexCedula);

        jMenuBar1.add(jmnuReportes);

        jmnuUsuarios.setText("Usuarios");

        jmniAgregarUsuario.setText("Agregar Usuario");
        jmniAgregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmniAgregarUsuarioActionPerformed(evt);
            }
        });
        jmnuUsuarios.add(jmniAgregarUsuario);

        jMenuBar1.add(jmnuUsuarios);

        jmnuSalir.setText("Salir");
        jmnuSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmnuSalirMouseClicked(evt);
            }
        });
        jmnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuSalirActionPerformed(evt);
            }
        });
        jMenuBar1.add(jmnuSalir);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdskPrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jdskPrincipal)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmntEstudiantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmntEstudiantesActionPerformed
        Alumnos frm = Alumnos.getInstancia();
        if (!frm.isVisible()) {
            jdskPrincipal.add(frm);
            frm.setVisible(true);
        } else {
            try {
                frm.setSelected(true); // Lo trae al frente si ya está abierto
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jmntEstudiantesActionPerformed

    private void jmniReporteEstudiantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmniReporteEstudiantesActionPerformed
        try {
            Conexion cc = new Conexion();
            Connection cn = cc.conectar();

            InputStream archivo = getClass().getResourceAsStream("/Reportes/ReporteTodosEstudiantes.jasper");

            if (archivo == null) {
                JOptionPane.showMessageDialog(null,
                        "No se encontró el reporte compilado (.jasper).\n"
                        + "Compila primero el archivo .jrxml en JasperSoft Studio.");
                return;
            }

            JasperReport reporte = (JasperReport) JRLoader.loadObject(archivo);
            JasperPrint imprimir = JasperFillManager.fillReport(reporte, null, cn);

            // CREAR UN JINTERNALFRAME PARA MOSTRAR EL REPORTE DENTRO
            JInternalFrame iframe = new JInternalFrame("Reporte de Estudiantes", true, true, true, true);

            // Crear el visor del reporte
            JRViewer viewer = new JRViewer(imprimir);
            iframe.getContentPane().add(viewer);

            // Configurar tamaño y agregar al desktop
            iframe.setSize(800, 600);
            jdskPrincipal.add(iframe);
            iframe.setVisible(true);
            iframe.setMaximizable(true);

            try {
                iframe.setMaximum(true); // Maximizar dentro del desktop
            } catch (Exception e) {
                // Ignorar si no se puede maximizar
            }

            archivo.close();
            cn.close();

        } catch (Exception ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_jmniReporteEstudiantesActionPerformed

    private void jmniEstudiantexCedulaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmniEstudiantexCedulaActionPerformed
        JInternalFrame abierto = buscarFrameAbierto(ReporteCedula.class);
        if (abierto != null) {
            try {
                abierto.setSelected(true);
                abierto.toFront();
            } catch (Exception ignored) {
            }
            return;
        }

        // Si no está abierto, crear y agregar
        ReporteCedula frm = new ReporteCedula();
        jdskPrincipal.add(frm);
        frm.setVisible(true);
        try {
            frm.setSelected(true);
        } catch (Exception ignored) {
        }
    }//GEN-LAST:event_jmniEstudiantexCedulaActionPerformed

    private void jmntMatriculasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmntMatriculasActionPerformed
        Matriculas frm = Matriculas.getInstancia();
        if (!frm.isVisible()) {
            jdskPrincipal.add(frm);
            frm.setVisible(true);
        } else {
            try {
                frm.setSelected(true); // Lo trae al frente si ya está abierto
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jmntMatriculasActionPerformed
     private void jmnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuSalirActionPerformed
        
    }//GEN-LAST:event_jmnuSalirActionPerformed

    private void jmnuSalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmnuSalirMouseClicked
        int opcion = JOptionPane.showConfirmDialog(this,
            "¿Deseas salir del sistema?",
            "Confirmar salida",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.QUESTION_MESSAGE);

        if (opcion == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jmnuSalirMouseClicked

    private void jmniAgregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {                                                   
        AgregarUsuario frm = AgregarUsuario.getInstancia();
        if (!frm.isVisible()) {
            jdskPrincipal.add(frm);
            frm.setVisible(true);
        }
    }

    private void jmntCursosActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        Cursos frmCursos = Cursos.getInstancia();
        if (!frmCursos.isVisible()) {
            jdskPrincipal.add(frmCursos);
            frmCursos.setVisible(true);
            } else {
            try {
                frmCursos.setSelected(true); // Lo trae al frente si ya está abierto
            } catch (java.beans.PropertyVetoException ex) {
                ex.printStackTrace();
            }
        }
    }                                                  
        private void abrirReporteBarras() {
        // Si ya está abierto, lo traemos al frente
        JInternalFrame abierto = buscarFrameAbierto(ReporteBarras.class);
        if (abierto != null) {
            try {
                abierto.setSelected(true);
                abierto.toFront();
            } catch (Exception ignored) {
            }
            return;
        }

        // Si no está abierto, lo creamos y agregamos
        ReporteBarras r = new ReporteBarras();  // tu clase existente, sin tocarla
        jdskPrincipal.add(r);
        r.setVisible(true);
        try {
            r.setSelected(true);
        } catch (Exception ignored) {
        }
    }

    private JInternalFrame buscarFrameAbierto(Class<? extends JInternalFrame> tipo) {
        for (JInternalFrame f : jdskPrincipal.getAllFrames()) {
            if (tipo.isInstance(f)) {
                return f;
            }
        }
        return null;
    }

    private void abrirBarrasGeneroPorCurso() {
        JInternalFrame abierto = buscarFrameAbierto(BarrasGeneroPorCurso.class);
        if (abierto != null) {
            try {
                abierto.setSelected(true);
                abierto.toFront();
            } catch (Exception ignored) {
            }
            return;
        }
        BarrasGeneroPorCurso r = new BarrasGeneroPorCurso();
        jdskPrincipal.add(r);
        r.setVisible(true);
        try {
            r.setSelected(true);
        } catch (Exception ignored) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JDesktopPane jdskPrincipal;
    private javax.swing.JMenuItem jmniAgregarUsuario;
    private javax.swing.JMenuItem jmniEstudiantexCedula;
    private javax.swing.JMenuItem jmniReporteEstudiantes;
    private javax.swing.JMenuItem jmntCursos;
    private javax.swing.JMenuItem jmntEstudiantes;
    private javax.swing.JMenuItem jmntMatriculas;
    private javax.swing.JMenu jmnuReportes;
    private javax.swing.JMenu jmnuSalir;
    private javax.swing.JMenu jmnuUsuarios;
    private javax.swing.JMenu jmnuVentanas;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JMenuItem jmniReporteBarras;
    private javax.swing.JMenuItem jmniBarrasGeneroPorCurso;

}
